{
  "contractName": "MerkleTreeWithRootHistoryMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_treeLevels",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_leaf",
          "type": "bytes32"
        }
      ],
      "name": "insert",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_treeLevels\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"}],\"name\":\"insert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"hashLeftRight(bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32,uint256)\":{\"details\":\"Whether the root is present in the root history\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/zy/privacy-vault/contracts/Mocks/MerkleTreeWithRootHistoryMock.sol\":\"MerkleTreeWithRootHistoryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/zy/privacy-vault/contracts/MerkleTreeWithRootHistory.sol\":{\"keccak256\":\"0x40bfc3aed6d868330cda6a003043282f6b9b682cbffa6ad6f23c7807099b745e\",\"urls\":[\"bzz-raw://34233fffc729680802033eeab1793fba3f31268ab82278eb631159561cee620d\",\"dweb:/ipfs/QmZthTJUYAGoX2NFR2asnddSqr6E4SmaeyZy7Np5w3KJqE\"]},\"/home/zy/privacy-vault/contracts/Mocks/MerkleTreeWithRootHistoryMock.sol\":{\"keccak256\":\"0x5889ee0d2e2aee78b7123021056d2214e251fdea20be8be6e075053ac05f7acb\",\"urls\":[\"bzz-raw://7015cd9d71fcb502182b9d665a963c5053d1ee5fda13b4f3e0a504077f4f47de\",\"dweb:/ipfs/QmdKRgXMmrY4QJWpnAzSSnmuMM2m7nsTVwER4MKcaXVkfD\"]}},\"version\":1}",
  "bytecode": "0x6080604052600380546001600160401b031916905534801561002057600080fd5b50604051610b84380380610b848339818101604052602081101561004357600080fd5b50518063ffffffff81166100885760405162461bcd60e51b8152600401808060200182810382526027815260200180610afb6027913960400191505060405180910390fd5b60208163ffffffff16106100cd5760405162461bcd60e51b8152600401808060200182810382526022815260200180610b426022913960400191505060405180910390fd5b6000805463ffffffff191663ffffffff83161781556002805460018181019092557f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c600080516020610aba8339815191529091018190558154808301835592829052600080516020610b648339815191529092018290555b60005463ffffffff90811690821610156101b35761016c82806001600160e01b036101e816565b600280546001818101909255600080516020610aba83398151915201829055805480820182556000829052600080516020610b648339815191520182905590925001610145565b5060046101c982806001600160e01b036101e816565b81546001810183556000928352602090922090910155506103c9915050565b6000600080516020610b22833981519152831061024c576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020610b2283398151915282106102985760405162461bcd60e51b8152600401808060200182810382526021815260200180610ada6021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b1580156102f257600080fd5b505af4158015610306573d6000803e3d6000fd5b505050506040513d604081101561031c57600080fd5b5080516020909101519092509050600080516020610b22833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561039457600080fd5b505af41580156103a8573d6000803e3d6000fd5b505050506040513d60408110156103be57600080fd5b505195945050505050565b6106e2806103d86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806390eeb02b1161007157806390eeb02b14610162578063c2b40ae41461016a578063e829558814610187578063ec732959146101a4578063f178e47c146101ac578063fc7e9c6f146101c9576100a9565b80632d287e43146100ae57806338bf282e146100cd578063414a37ba146101025780634ecf518b1461010a578063876cf0c41461012b575b600080fd5b6100cb600480360360208110156100c457600080fd5b50356101d1565b005b6100f0600480360360408110156100e357600080fd5b50803590602001356101de565b60408051918252519081900360200190f35b6100f06103c1565b6101126103d3565b6040805163ffffffff9092168252519081900360200190f35b61014e6004803603604081101561014157600080fd5b50803590602001356103df565b604080519115158252519081900360200190f35b61011261041e565b6100f06004803603602081101561018057600080fd5b503561042a565b6100f06004803603602081101561019d57600080fd5b5035610448565b6100f0610455565b6100f0600480360360208110156101c257600080fd5b5035610479565b610112610486565b6101da8161049a565b5050565b600060008051602061068e8339815191528310610242576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b60008051602061068e833981519152821061028e5760405162461bcd60e51b815260040180806020018281038252602181526020018061066d6021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b1580156102e857600080fd5b505af41580156102fc573d6000803e3d6000fd5b505050506040513d604081101561031257600080fd5b508051602090910151909250905060008051602061068e833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561038a57600080fd5b505af415801561039e573d6000803e3d6000fd5b505050506040513d60408110156103b457600080fd5b5051925050505b92915050565b60008051602061068e83398151915281565b60005463ffffffff1681565b6000826103ee575060006103bb565b82600483815481106103fc57fe5b90600052602060002001541415610415575060016103bb565b50600092915050565b60035463ffffffff1681565b6004818154811061043757fe5b600091825260209091200154905081565b6002818154811061043757fe5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6001818154811061043757fe5b600354640100000000900463ffffffff1681565b60035460008054909163ffffffff640100000000909104811691811660020a168114156104f85760405162461bcd60e51b815260040180806020018281038252602f81526020018061063e602f913960400191505060405180910390fd5b6003805463ffffffff64010000000080830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff90811690821610156105d1576001851661058d5783925060028163ffffffff168154811061055b57fe5b906000526020600020015491508360018263ffffffff168154811061057c57fe5b6000918252602090912001556105b1565b60018163ffffffff16815481106105a057fe5b906000526020600020015492508391505b6105bb83836101de565b9350600263ffffffff8616049450600101610529565b50506003805463ffffffff198116600163ffffffff928316810183169190911783556004805491820181556000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01939093555464010000000090049091166000190194935050505056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e2062652061646465645f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a265627a7a72315820992aeed3f4baea41ef5122ffafc5d3ad1c88747e4efd08456dedd176408d47a264736f6c63430005110032405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5f72696768742073686f756c6420626520696e7369646520746865206669656c645f747265654c6576656c732073686f756c642062652067726561746572207468616e207a65726f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000015f747265654c6576656c732073686f756c64206265206c657373207468616e203332b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806390eeb02b1161007157806390eeb02b14610162578063c2b40ae41461016a578063e829558814610187578063ec732959146101a4578063f178e47c146101ac578063fc7e9c6f146101c9576100a9565b80632d287e43146100ae57806338bf282e146100cd578063414a37ba146101025780634ecf518b1461010a578063876cf0c41461012b575b600080fd5b6100cb600480360360208110156100c457600080fd5b50356101d1565b005b6100f0600480360360408110156100e357600080fd5b50803590602001356101de565b60408051918252519081900360200190f35b6100f06103c1565b6101126103d3565b6040805163ffffffff9092168252519081900360200190f35b61014e6004803603604081101561014157600080fd5b50803590602001356103df565b604080519115158252519081900360200190f35b61011261041e565b6100f06004803603602081101561018057600080fd5b503561042a565b6100f06004803603602081101561019d57600080fd5b5035610448565b6100f0610455565b6100f0600480360360208110156101c257600080fd5b5035610479565b610112610486565b6101da8161049a565b5050565b600060008051602061068e8339815191528310610242576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b60008051602061068e833981519152821061028e5760405162461bcd60e51b815260040180806020018281038252602181526020018061066d6021913960400191505060405180910390fd5b6040805163f47d33b560e01b81526004810185905260006024820181905282518693919273__Hasher________________________________9263f47d33b592604480840193829003018186803b1580156102e857600080fd5b505af41580156102fc573d6000803e3d6000fd5b505050506040513d604081101561031257600080fd5b508051602090910151909250905060008051602061068e833981519152848308915073__Hasher________________________________63f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561038a57600080fd5b505af415801561039e573d6000803e3d6000fd5b505050506040513d60408110156103b457600080fd5b5051925050505b92915050565b60008051602061068e83398151915281565b60005463ffffffff1681565b6000826103ee575060006103bb565b82600483815481106103fc57fe5b90600052602060002001541415610415575060016103bb565b50600092915050565b60035463ffffffff1681565b6004818154811061043757fe5b600091825260209091200154905081565b6002818154811061043757fe5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6001818154811061043757fe5b600354640100000000900463ffffffff1681565b60035460008054909163ffffffff640100000000909104811691811660020a168114156104f85760405162461bcd60e51b815260040180806020018281038252602f81526020018061063e602f913960400191505060405180910390fd5b6003805463ffffffff64010000000080830482166001019091160267ffffffff000000001990911617905582600080805b60005463ffffffff90811690821610156105d1576001851661058d5783925060028163ffffffff168154811061055b57fe5b906000526020600020015491508360018263ffffffff168154811061057c57fe5b6000918252602090912001556105b1565b60018163ffffffff16815481106105a057fe5b906000526020600020015492508391505b6105bb83836101de565b9350600263ffffffff8616049450600101610529565b50506003805463ffffffff198116600163ffffffff928316810183169190911783556004805491820181556000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01939093555464010000000090049091166000190194935050505056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e2062652061646465645f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a265627a7a72315820992aeed3f4baea41ef5122ffafc5d3ad1c88747e4efd08456dedd176408d47a264736f6c63430005110032",
  "sourceMap": "69:225:8:-;;;1434:34:3;;;-1:-1:-1;;;;;;1472:27:3;;;142:81:8;5:2:-1;;;;30:1;27;20:12;5:2;142:81:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;142:81:8;;1583:15:3;;;1575:67;;;;-1:-1:-1;;;1575:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:2;1656:11;:16;;;1648:63;;;;-1:-1:-1;;;1648:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1717:6;:20;;-1:-1:-1;;1717:20:3;;;;;;;1791:5;27:10:-1;;-1:-1;23:18;;;45:23;;;1092:77:3;-1:-1:-1;;;;;;;;;;;1791:23:3;;;;;;27:10:-1;;23:18;;;45:23;;1820:32:3;;;;-1:-1:-1;;;;;;;;;;;1820:32:3;;;;;;1859:175;1882:6;;;;;;1878:10;;;;1859:175;;;1917:39;1931:11;;-1:-1:-1;;;;;1917:13:3;:39;:::i;:::-;1964:5;27:10:-1;;39:1;23:18;;;45:23;;;-1:-1;;;;;;;;;;;1964:23:3;;;;27:10:-1;;23:18;;;45:23;;-1:-1;1995:32:3;;;-1:-1:-1;;;;;;;;;;;1995:32:3;;;;1903:53;;-1:-1:-1;1890:3:3;1859:175;;;-1:-1:-1;2040:5:3;2051:39;2065:11;;-1:-1:-1;;;;;2051:13:3;:39;:::i;:::-;27:10:-1;;39:1;23:18;;45:23;;-1:-1;2040:51:3;;;;;;;;;;;-1:-1:-1;69:225:8;;-1:-1:-1;;69:225:8;2168:445:3;2243:7;-1:-1:-1;;;;;;;;;;;2266:27:3;;2258:72;;;;;-1:-1:-1;;;2258:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2344:28:3;;2336:74;;;;-1:-1:-1;;;2336:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:23;;;-1:-1:-1;;;2476:23:3;;;;;;;;2416:9;2476:23;;;;;;;;2436:5;;2416:9;;2476:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;2476:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2476:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2476:23:3;;;;;;;;;-1:-1:-1;2476:23:3;-1:-1:-1;;;;;;;;;;;;2527:6:3;2516:1;2509:38;2505:42;;2562:6;:17;2580:1;2583;2562:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2562:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2562:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2562:23:3;;2168:445;-1:-1:-1;;;;;2168:445:3:o;69:225:8:-;;;;;;;",
  "deployedSourceMap": "69:225:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:225:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;227:65:8;;:::i;:::-;;2168:445:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2168:445:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;937:114;;;:::i;1213:20::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3456:205;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3456:205:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1434:34;;;:::i;1503:22::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1503:22:3;;:::i;1408:::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1408:22:3;;:::i;1055:114::-;;;:::i;1373:31::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1373:31:3;;:::i;1472:27::-;;;:::i;227:65:8:-;273:14;281:5;273:7;:14::i;:::-;;227:65;:::o;2168:445:3:-;2243:7;-1:-1:-1;;;;;;;;;;;2266:27:3;;2258:72;;;;;-1:-1:-1;;;2258:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2344:28:3;;2336:74;;;;-1:-1:-1;;;2336:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:23;;;-1:-1:-1;;;2476:23:3;;;;;;;;2416:9;2476:23;;;;;;;;2436:5;;2416:9;;2476:6;;:17;;:23;;;;;;;;;;:6;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;2476:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2476:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2476:23:3;;;;;;;;;-1:-1:-1;2476:23:3;-1:-1:-1;;;;;;;;;;;;2527:6:3;2516:1;2509:38;2505:42;;2562:6;:17;2580:1;2583;2562:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2562:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2562:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2562:23:3;;-1:-1:-1;;;2168:445:3;;;;;:::o;937:114::-;-1:-1:-1;;;;;;;;;;;937:114:3;:::o;1213:20::-;;;;;;:::o;3456:205::-;3525:4;3541:10;3537:43;;-1:-1:-1;3568:5:3;3561:12;;3537:43;3606:5;3589;3595:6;3589:13;;;;;;;;;;;;;;;;:22;3585:54;;;-1:-1:-1;3628:4:3;3621:11;;3585:54;-1:-1:-1;3651:5:3;3456:205;;;;:::o;1434:34::-;;;;;;:::o;1503:22::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1503:22:3;:::o;1408:::-;;;;;;;;;;1055:114;1092:77;1055:114;:::o;1373:31::-;;;;;;;;;;1472:27;;;;;;;;;:::o;2617:767::-;2708:9;;2666:12;2758:6;;2666:12;;2708:9;;;;;;;;2758:6;;2754:1;2747:17;2731:33;;;;2723:93;;;;-1:-1:-1;;;2723:93:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2822:9;:14;;;;;;;;;2835:1;2822:14;;;;;-1:-1:-1;;2822:14:3;;;;;;2869:5;-1:-1:-1;;;2918:355:3;2941:6;;;;;;2937:10;;;;2918:355;;;2966:16;;;2962:225;;3006:16;2999:23;;3040:5;3046:1;3040:8;;;;;;;;;;;;;;;;;;3032:16;;3079;3059:14;3074:1;3059:17;;;;;;;;;;;;;;;;;;;:36;2962:225;;;3127:14;3142:1;3127:17;;;;;;;;;;;;;;;;;;3120:24;;3162:16;3154:24;;2962:225;3214:26;3228:4;3234:5;3214:13;:26::i;:::-;3195:45;-1:-1:-1;3265:1:3;3249:17;;;;;-1:-1:-1;2949:3:3;;2918:355;;;-1:-1:-1;;3298:16:3;;;-1:-1:-1;;3279:39:3;;3298:16;;;;;:20;;3279:39;;;;;;;;3325:5;27:10:-1;;23:18;;;45:23;;-1:-1;3325:28:3;;;;;;;3366:9;;;;;;;-1:-1:-1;;3366:13:3;;2617:767;-1:-1:-1;;;;2617:767:3:o",
  "source": "pragma solidity 0.5.17;\n\nimport '../MerkleTreeWithRootHistory.sol';\n\ncontract MerkleTreeWithRootHistoryMock is MerkleTreeWithRootHistory {\n\n  constructor (uint32 _treeLevels) MerkleTreeWithRootHistory(_treeLevels) public {}\n\n  function insert(bytes32 _leaf) public {\n      _insert(_leaf);\n  }\n}\n",
  "sourcePath": "/home/zy/privacy-vault/contracts/Mocks/MerkleTreeWithRootHistoryMock.sol",
  "ast": {
    "absolutePath": "/home/zy/privacy-vault/contracts/Mocks/MerkleTreeWithRootHistoryMock.sol",
    "exportedSymbols": {
      "MerkleTreeWithRootHistoryMock": [
        1771
      ]
    },
    "id": 1772,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1748,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/zy/privacy-vault/contracts/MerkleTreeWithRootHistory.sol",
        "file": "../MerkleTreeWithRootHistory.sol",
        "id": 1749,
        "nodeType": "ImportDirective",
        "scope": 1772,
        "sourceUnit": 1591,
        "src": "25:42:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1750,
              "name": "MerkleTreeWithRootHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1590,
              "src": "111:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithRootHistory_$1590",
                "typeString": "contract MerkleTreeWithRootHistory"
              }
            },
            "id": 1751,
            "nodeType": "InheritanceSpecifier",
            "src": "111:25:8"
          }
        ],
        "contractDependencies": [
          1590
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1771,
        "linearizedBaseContracts": [
          1771,
          1590
        ],
        "name": "MerkleTreeWithRootHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "221:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1760,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1756,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1753,
                    "src": "201:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1757,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1755,
                  "name": "MerkleTreeWithRootHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1590,
                  "src": "175:25:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithRootHistory_$1590_$",
                    "typeString": "type(contract MerkleTreeWithRootHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "175:38:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "155:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "154:20:8"
            },
            "returnParameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:8"
            },
            "scope": 1771,
            "src": "142:81:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1769,
              "nodeType": "Block",
              "src": "265:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1766,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "281:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1765,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "273:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1768,
                  "nodeType": "ExpressionStatement",
                  "src": "273:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 1770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1762,
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "243:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1761,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:15:8"
            },
            "returnParameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "265:0:8"
            },
            "scope": 1771,
            "src": "227:65:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1772,
        "src": "69:225:8"
      }
    ],
    "src": "0:295:8"
  },
  "legacyAST": {
    "absolutePath": "/home/zy/privacy-vault/contracts/Mocks/MerkleTreeWithRootHistoryMock.sol",
    "exportedSymbols": {
      "MerkleTreeWithRootHistoryMock": [
        1771
      ]
    },
    "id": 1772,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1748,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/zy/privacy-vault/contracts/MerkleTreeWithRootHistory.sol",
        "file": "../MerkleTreeWithRootHistory.sol",
        "id": 1749,
        "nodeType": "ImportDirective",
        "scope": 1772,
        "sourceUnit": 1591,
        "src": "25:42:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1750,
              "name": "MerkleTreeWithRootHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1590,
              "src": "111:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithRootHistory_$1590",
                "typeString": "contract MerkleTreeWithRootHistory"
              }
            },
            "id": 1751,
            "nodeType": "InheritanceSpecifier",
            "src": "111:25:8"
          }
        ],
        "contractDependencies": [
          1590
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1771,
        "linearizedBaseContracts": [
          1771,
          1590
        ],
        "name": "MerkleTreeWithRootHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "221:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1760,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1756,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1753,
                    "src": "201:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1757,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1755,
                  "name": "MerkleTreeWithRootHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1590,
                  "src": "175:25:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithRootHistory_$1590_$",
                    "typeString": "type(contract MerkleTreeWithRootHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "175:38:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "155:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "154:20:8"
            },
            "returnParameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:8"
            },
            "scope": 1771,
            "src": "142:81:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1769,
              "nodeType": "Block",
              "src": "265:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1766,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1762,
                        "src": "281:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1765,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "273:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1768,
                  "nodeType": "ExpressionStatement",
                  "src": "273:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 1770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1762,
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "243:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1761,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:15:8"
            },
            "returnParameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "265:0:8"
            },
            "scope": 1771,
            "src": "227:65:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1772,
        "src": "69:225:8"
      }
    ],
    "src": "0:295:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-29T09:48:59.476Z",
  "devdoc": {
    "methods": {
      "hashLeftRight(bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32,uint256)": {
        "details": "Whether the root is present in the root history"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}